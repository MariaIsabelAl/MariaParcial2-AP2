#pragma checksum "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\Pages\CobroPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "87258885897eb4101769656de88b224a6e874d15"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MariaParcial2_AP2.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using MariaParcial2_AP2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using MariaParcial2_AP2.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\Pages\CobroPage.razor"
using MariaParcial2_AP2.BLL;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\Pages\CobroPage.razor"
using MariaParcial2_AP2.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\Pages\CobroPage.razor"
using MariaParcial2_AP2.DAL;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/cobro")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/cobro/{CobroId:int}")]
    public partial class CobroPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 153 "C:\Aplicada2\MariaParcial2-AP2\MariaParcial2-AP2\Pages\CobroPage.razor"
       

    [Parameter]
    public int CobroId { get; set; }

    Cobros cobros = new Cobros();
    Contexto contexto= new Contexto();
    List<Ventas> listaVentas = new List<Ventas>();
    List<Clientes> listaClientes = new List<Clientes>();
    
    public double encontrarmonto { get; set; }
    public double encontrarbalance { get; set; }
    public DateTime encontrarfecha { get; set; }


    protected override void OnInitialized()
    {
        Nuevo();
        if (CobroId > 0)
        {
            var auxCobro = CobrosBLL.Buscar(CobroId);
            if (auxCobro != null)
                this.cobros = auxCobro;
            else
                toast.ShowWarning("No encontrado.");
        }

        listaClientes= ClientesBLL.GetList(p => true);
        listaVentas = VentasBLL.GetList(p => true);
    }

    private void Buscar()
    {
        var encontrado = CobrosBLL.Buscar(cobros.CobroId);
        if (encontrado != null)
        {
            this.cobros = encontrado;
        }
        else
            toast.ShowWarning("No encontrado");

    }


    private void Nuevo()
    {
        this.cobros = new Cobros();
        encontrarmonto=0;
        encontrarfecha=DateTime.Now;
        encontrarbalance=0;
        
    }


    private void Agregar()
    {

            this.cobros.CobrosDetalle.Add(new CobrosDetalle
            {
                CobroDetalleId = 0,
                Fecha= encontrarfecha,
                Monto=encontrarmonto,
                Balance=encontrarbalance,
                
            });
        encontrarmonto=0;
        encontrarfecha=DateTime.Now;
        encontrarbalance=0; 

        

    }

    private void Cobrar(CobrosDetalle detalle)
    {
        var item = VentasBLL.Buscar(cobros.VentaId);
        detalle.Cobrado = item.Balance;
        item.Balance -= detalle.Cobrado;
        CalcularTotal();
    }

    private void Get()
    {
        var auxMonto = VentasBLL.Buscar(cobros.VentaId);
        var auxBalance = VentasBLL.Buscar(cobros.VentaId);
        var auxFecha = VentasBLL.Buscar(cobros.VentaId);
        if (auxFecha != null & auxMonto != null & auxBalance != null )
        {
            encontrarfecha =auxFecha.Fecha;
            encontrarmonto = auxMonto.Monto;
            encontrarbalance = auxBalance.Balance;
        }

    }


    private void CalcularTotal()
    {
        double Total = 0;
        foreach (var item in cobros.CobrosDetalle)
        {
            Total += item.Balance;
        }
        cobros.Cobrado = Total;
    }


    private void EliminarCobrosDetalle(CobrosDetalle detalle)
    {
        try
        {
            cobros.CobrosDetalle.Remove(detalle);
            CalcularTotal();
        }
        catch (Exception)
        {

            throw;
        }
    }


    private void Guardar()
    {
        bool paso;
        if (cobros.CobrosDetalle.Count == 0)
        {
            toast.ShowWarning("Tienes que agregar al menos un elemento a la lista", "Lista Vac√≠a!");
            return;
        }
        else
        {
            var item = VentasBLL.Buscar(cobros.VentaId);
            item.Balance -= cobros.Cobrado;
            paso = CobrosBLL.Guardar(cobros);

            if (paso)
            {
                Nuevo();
                toast.ShowSuccess("Guardado correctamente");
            }
            else
            {
                toast.ShowError("No fue posible guardar");
            }
        }

    }

    private void Eliminar()
    {
        bool elimino;

        elimino = CobrosBLL.Eliminar(cobros.CobroId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toast { get; set; }
    }
}
#pragma warning restore 1591
